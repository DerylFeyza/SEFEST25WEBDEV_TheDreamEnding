datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  LENDER
}

enum RentalStatus {
  PENDING
  CONFIRMED
  ONGOING
  COMPLETED
  CANCELLED
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         Role          @default(USER)
  isVerified   Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  items        Item[]
  rentals      Rental[]      @relation("RentalsAsRenter")
  subscription Subscription?
  reviews      Review[]
}

model Item {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  condition   String?
  imageUrl    String?
  available   Boolean  @default(true)
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rentals     Rental[]
  reviews     Review[]
}

model Rental {
  id        Int          @id @default(autoincrement())
  item      Item         @relation(fields: [itemId], references: [id])
  itemId    Int
  renter    User         @relation("RentalsAsRenter", fields: [renterId], references: [id])
  renterId  Int
  startDate DateTime
  endDate   DateTime
  status    RentalStatus @default(PENDING)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Subscription {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
